import { Config, Headman, PrismaClient } from "@prisma/client";
import { HearManager } from "@vk-io/hear";
import { randomInt } from "crypto";
import { send } from "process";
import { Attachment, Keyboard, KeyboardBuilder } from "vk-io";
import { IQuestionMessageContext } from "vk-io-question";
import * as xlsx from 'xlsx';
import * as fs from 'fs';
import { answerTimeLimit, chat_id, root, timer_text, vk } from "..";
import prisma from "./prisma_client";
import { Logger } from "./helper";


export function registerUserRoutes(hearManager: HearManager<IQuestionMessageContext>): void {
	hearManager.hear(/1000-7/, async (context) => {
        const get_user:any = await prisma.user.findFirst({
            where: {
                idvk: context.senderId
            }
        })
        const delatt = await prisma.user.delete({
            where: {
                id: get_user?.id
            }
        })
        if (delatt) {
            context.send(`–í–∞—Å —É–¥–∞–ª–∏–ª–∏, ${get_user.name}. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –Ω–∞–º —Å–Ω–æ–≤–∞!`)
            await Logger(`Deleted ${get_user.name}`)
        }
    })
    hearManager.hear(/–µ–Ω–æ—Ç–∏–∫/, async (context) => {
        let WorkBook = xlsx.utils.book_new()
        const facult:any = ['coga', 'grif', 'sliz', 'puff']
        for (let i=0; i < facult.length; i++) {
            const data = await prisma.user.findMany({
                where: {
                    facult: facult[i]
                }
            }
            
            )
            let jsonArr = [];
            let counter = 1
            for (let j = 0; j < data.length; j++) {
                jsonArr.push({
                    id: counter++,
                    name: data[j]?.name,
                    coga: data[j]?.coga,
                    puff: data[j]?.puff,
                    grif: data[j]?.grif,
                    sliz: data[j]?.sliz,
                    share: `https://vk.com/id${data[j]?.idvk}`,
                    crdate: data[j]?.crdate,
                });
            }
            let complet = []
            counter = 1
            for (let x = 0; x < jsonArr.length; x++) {
                complet.push({
                    id: counter++,
                    name: jsonArr[x]?.name,
                    coga: jsonArr[x]?.coga,
                    puff: jsonArr[x]?.puff,
                    grif: jsonArr[x]?.grif,
                    sliz: jsonArr[x]?.sliz,
                    share: jsonArr[x]?.share,
                    crdate: jsonArr[x]?.crdate,
                });
            }
            const WorkSheet = xlsx.utils.json_to_sheet(complet|| null)
            const translate: any = {
                "coga": "–ö–æ–≥—Ç–µ–≤—Ä–∞–Ω",
                "puff": "–ü—É—Ñ—Ñ–µ–Ω–¥—É–π",
                "grif": "–ì—Ä–∏—Ñ—Ñ–∏–Ω–¥–æ—Ä",
                "sliz": "–°–ª–∏–∑–µ—Ä–∏–Ω"
            }
            xlsx.utils.book_append_sheet(WorkBook, WorkSheet, `${translate[facult[i]]}`.substr(0, 31));

            /* fix headers */
            xlsx.utils.sheet_add_aoa(WorkSheet, [["‚Ññ –ø/–ø", "–§–ò–û —É—á–µ–Ω–∏–∫–∞", "–ö–æ–≥—Ç–µ–≤—Ä–∞–Ω", "–ü—É—Ñ—Ñ–µ–Ω–¥—É–π", "–ì—Ä–∏—Ñ—Ñ–∏–Ω–¥–æ—Ä", "–°–ª–∏–∑–µ—Ä–∏–Ω", "–ü—Ä–æ—Ñ–∏–ª—å", "–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"]], { origin: "A1" });
        }
        /* create an XLSX file and try to save to Presidents.xlsx */
        await Logger(`–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã... hog-stud-report.xlsx`)
        await xlsx.writeFile(WorkBook, `hog-stud-report.xlsx`);
        let answer_check = false
		while (answer_check == false) {
			const answer1 = await context.question(`–í—ã –≤–∏–¥–∏—Ç–µ –ï–Ω–æ—Ç–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —á—Ç–æ-—Ç–æ –≤—ã—á–∏—Å–ª–∏—è–µ—Ç. –ò —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤–∞—Å, —Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 2+2?`,
                { keyboard: Keyboard.builder()
                    .textButton({ label: '4', payload: { command: 'yes' }, color: 'secondary' })
                    .textButton({ label: '22', payload: { command: 'not' }, color: 'secondary' })
                    .oneTime().inline(), answerTimeLimit
                }
			)
            if (answer1.isTimeout) { return await context.send('‚è∞ –¢–µ—Ä–ø–µ–Ω–∏–µ –ï–Ω–æ—Ç–∏–∫–∞ –∏—Å—Ç–µ–∫–ª–æ, –æ–Ω —É—à–µ–ª!') }
            answer_check = true
            if (answer1.text == `22–µ–∂–∞`) {
                await context.sendDocuments({ value: `./prisma/hat.db`, filename: `hat.db` }, { message: 'üí° –û—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–∞ —Å–∞–π—Ç–µ: https://sqliteonline.com/' } );
                await vk.api.messages.send({
                    peer_id: chat_id,
                    random_id: 0,
                    message: `‚Äº @id${context.senderId}(Admin) –¥–µ–ª–∞–µ—Ç –±–µ–∫–∞–ø –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö dev.db –æ—Ç –®–ª—è–ø—ã –∞—Ö–∞—Ö.`
                })
                await context.sendDocuments({
                        value: `hog-stud-report.xlsx`,
                        filename: `hog-stud-report.xlsx`
                    },
                    {
                        message: '–ï–Ω–æ—Ç–∏–∫ —Å—á–∏—Ç–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ —É—á–µ–Ω–∏–∫–æ–≤ –ø—Ä–∏–±—ã–ª–æ –≤ –•–æ–≥–≤–∞—Ä—Ç—Å, –∏ –ø—Ä–æ—Ç—è–≥–∏–≤–∞–µ—Ç –≤–∞–º –æ—Ç—á—ë—Ç –æ –ø—Ä–æ–¥–µ–ª–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ –ø–æ–∫—É—Ä–∏–≤–∞—è –±–∞–º–±—É–∫ –ø—Ä–µ–º–∏—É–º –∫–ª–∞—Å—Å–∞.'
                    }
                );
                answer_check = true
                if (!answer1.payload) {
                    context.send(`–ñ–º–∏—Ç–µ —Ç–æ–ª—å–∫–æ –ø–æ –∫–Ω–æ–ø–∫–∞–º —Å –∏–∫–æ–Ω–∫–∞–º–∏!`)
                } else {
                    context.send(`–ß—Ç–æ –∂, –≤–∏–¥–∏–º–æ, –Ω–µ —Å–µ–≥–æ–¥–Ω—è. –•–æ—Ç—è —Ç–∞–∫ —Ö–æ—Ç–µ–ª–æ—Å—å –µ–≥–æ –ø–æ–≥–ª–∞–¥–∏—Ç—å...`)
                }
            }
		}
    })
    hearManager.hear(/!—Å—Ç–∞—Ä–æ—Å—Ç–∞/, async (context) => {
        if (context.senderId != root) { return }
        let answer_check = false
		while (answer_check == false) {
            let get_headman: Headman | null = await prisma.headman.findFirst()
            if (!get_headman) {
                get_headman = await prisma.headman.create({ data: { coga: "https://vk.com/id774674582", puff: "https://vk.com/miss.evergin", sliz: "https://vk.com/daniel.rend", grif: "https://vk.com/ruby_corlaien" } })
                await Logger('Heamans init!')
            }
			const answer8 = await context.question(`‚åõ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç... \n\n ü¶Ö –ö–æ–≥—Ç–µ–≤—Ä–∞–Ω \n üêç –°–ª–∏–∑–µ—Ä–∏–Ω \n ü¶° –ü—É—Ñ—Ñ–µ–Ω–¥—É–π \n ü¶Å –ì—Ä–∏—Ñ—Ñ–∏–Ω–¥–æ—Ä`,
				{
					keyboard: Keyboard.builder()
					.textButton({ label: 'ü¶°', payload: { command: 'puff' }, color: 'secondary' })
					.textButton({ label: 'ü¶Å', payload: { command: 'grif' }, color: 'secondary' }).row()
					.textButton({ label: 'ü¶Ö', payload: { command: 'coga' }, color: 'secondary' })
					.textButton({ label: 'üêç', payload: { command: 'sliz' }, color: 'secondary' })
					.oneTime().inline(), answerTimeLimit
				}
			)
			if (answer8.isTimeout) { return await context.send('‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞ –æ—Ç–≤–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∏—Å—Ç–µ–∫–ª–æ!') }
			if (!answer8.payload) {
				context.send(`üí° –ñ–º–∏—Ç–µ —Ç–æ–ª—å–∫–æ –ø–æ –∫–Ω–æ–ø–∫–∞–º —Å –∏–∫–æ–Ω–∫–∞–º–∏!`)
			} else {
                const data: any = { coga: get_headman.coga, puff: get_headman.puff, sliz: get_headman.sliz, grif: get_headman.grif }
                const name = await context.question(`üß∑ –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–æ–≤–æ–≥–æ —Å—Ç–∞—Ä–æ—Å—Ç—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ ${answer8.text}`, timer_text)
			    if (name.isTimeout) { return await context.send('‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞ –≤–≤–æ–¥ –∏–º–µ–Ω–∏ –∏—Å—Ç–µ–∫–ª–æ!') }
                data[answer8.payload.command] = name.text
                const upa = await prisma.headman.update({ where: { id: get_headman!.id }, data })
                await context.send(`${answer8.payload.command} —Å—Ç–∞—Ä–æ—Å—Ç–∞ —Å–º–µ–Ω–µ–Ω –Ω–∞ ${data[answer8.payload.command]}, –∑–∞–ø—É—Å–∫–∞—é –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä`)
                const data_answer: any = {
                    "coga": `–ö–û–ì–¢–ï–í–†–ê–ù üíôüíôüéâüéä ‚Äî –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥—É–º–∞–≤, —à–ª—è–ø–∞ –æ–≥–ª–∞—Å–∏–ª–∞ –≤–µ—Ä–¥–∏–∫—Ç –¥–ª—è –≤–∞—Å,
                    —É—á–µ–Ω–∏–∫(—Ü–∞) –ò–ú–Ø!
                    
                    –ü–æ–¥–∞–π –∑–∞—è–≤–∫—É –≤ –≥–æ—Å—Ç–∏–Ω—É—é:
                    –ü–∞—Ä–æ–ª—å: –ó–ù–ê–ù–ò–ï ‚Äî –°–ò–õ–ê (–ø–∞—Ä–æ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤—É –≥–æ—Å—Ç–∏–Ω–æ–π)
                    https://vk.com/club203252392
                    
                    –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–≤–µ—Ä—à–∏—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–∫—É–ø–∫–∏! –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏—è –±–∞–Ω–∫–∞ –ì—Ä–∏–Ω–≥–æ—Ç—Ç—Å https://vk.com/ho_bank
                    
                    –î–æ–±–∞–≤—å—Ç–µ –≤ –¥—Ä—É–∑—å—è —Å–≤–æ–µ–≥–æ –¥–µ–∫–∞–Ω–∞ ‚Äî https://vk.com/id638027723
                    
                    –ê —Ç–∞–∫–∂–µ —Å—Ç–∞—Ä–æ—Å—Ç—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞, –∏–º–µ–Ω–Ω–æ –∫ –Ω–µ–º—É(–Ω–µ–π) –º–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º ‚Äî
                    ${upa?.coga}
                    
                    –ü–æ–º–µ–Ω—è—Ç—å —Ñ–∞–∫—É–ª—å—Ç–µ—Ç –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞ 2 –∫—É—Ä—Å–µ –æ–±—É—á–µ–Ω–∏—è.`,
                    'puff': `–ü–£–§–§–ï–ù–î–£–ô üíõüíõüéâüéä ‚Äî –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥—É–º–∞–≤, —à–ª—è–ø–∞ –æ–≥–ª–∞—Å–∏–ª–∞ –≤–µ—Ä–¥–∏–∫—Ç –¥–ª—è –≤–∞—Å,
                    —É—á–µ–Ω–∏–∫(—Ü–∞) –ò–ú–Ø!
        
                    –ü–æ–¥–∞–π –∑–∞—è–≤–∫—É –≤ –≥–æ—Å—Ç–∏–Ω—É—é:
                    –ü–∞—Ä–æ–ª—å: –î–û–ë–†–û–ï –°–ï–†–î–¶–ï (–ø–∞—Ä–æ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤—É –≥–æ—Å—Ç–∏–Ω–æ–π)
                    https://vk.com/club200655488
                    
                    –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–≤–µ—Ä—à–∏—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–∫—É–ø–∫–∏! –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏—è –±–∞–Ω–∫–∞ –ì—Ä–∏–Ω–≥–æ—Ç—Ç—Å https://vk.com/ho_bank
                    
                    –î–æ–±–∞–≤—å—Ç–µ –≤ –¥—Ä—É–∑—å—è —Å–≤–æ–µ–≥–æ –¥–µ–∫–∞–Ω–∞ ‚Äî https://vk.com/id470933343
                    
                    –ê —Ç–∞–∫–∂–µ —Å—Ç–∞—Ä–æ—Å—Ç—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞, –∏–º–µ–Ω–Ω–æ –∫ –Ω–µ–º—É(–Ω–µ–π) –º–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º ‚Äî
                    ${upa?.puff}
                    
                    –ü–æ–º–µ–Ω—è—Ç—å —Ñ–∞–∫—É–ª—å—Ç–µ—Ç –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞ 2 –∫—É—Ä—Å–µ –æ–±—É—á–µ–Ω–∏—è.`,
                    'sliz': `–°–õ–ò–ó–ï–†–ò–ù üíöüíöüéâüéä ‚Äî –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥—É–º–∞–≤, —à–ª—è–ø–∞ –æ–≥–ª–∞—Å–∏–ª–∞ –≤–µ—Ä–¥–∏–∫—Ç –¥–ª—è –≤–∞—Å,
                    —É—á–µ–Ω–∏–∫(—Ü–∞) –ò–ú–Ø!
        
                    –ü–æ–¥–∞–π –∑–∞—è–≤–∫—É –≤ –≥–æ—Å—Ç–∏–Ω—É—é:
                    –ü–∞—Ä–æ–ª—å: –ß–ò–°–¢–ê–Ø –ö–†–û–í–¨ (–ø–∞—Ä–æ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤—É –≥–æ—Å—Ç–∏–Ω–æ–π)
                    https://vk.com/slytherin_hogonline
                    
                    –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–≤–µ—Ä—à–∏—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–∫—É–ø–∫–∏! –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏—è –±–∞–Ω–∫–∞ –ì—Ä–∏–Ω–≥–æ—Ç—Ç—Å https://vk.com/ho_bank
                    
                    –î–æ–±–∞–≤—å—Ç–µ –≤ –¥—Ä—É–∑—å—è —Å–≤–æ–µ–≥–æ –¥–µ–∫–∞–Ω–∞ ‚Äî https://vk.com/id625243635
                    
                    –ê —Ç–∞–∫–∂–µ —Å—Ç–∞—Ä–æ—Å—Ç—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞, –∏–º–µ–Ω–Ω–æ –∫ –Ω–µ–º—É(–Ω–µ–π) –º–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º ‚Äî
                    ${upa?.sliz}	
                        
                    –ü–æ–º–µ–Ω—è—Ç—å —Ñ–∞–∫—É–ª—å—Ç–µ—Ç –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞ 2 –∫—É—Ä—Å–µ –æ–±—É—á–µ–Ω–∏—è.`,
                    'grif': `–ì–†–ò–§–§–ò–ù–î–û–† ‚ù§‚ù§üéâüéä ‚Äî –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥—É–º–∞–≤, —à–ª—è–ø–∞ –æ–≥–ª–∞—Å–∏–ª–∞ –≤–µ—Ä–¥–∏–∫—Ç –¥–ª—è –≤–∞—Å,
                    —É—á–µ–Ω–∏–∫(—Ü–∞) –ò–ú–Ø!
        
                    –ü–æ–¥–∞–π –∑–∞—è–≤–∫—É –≤ –≥–æ—Å—Ç–∏–Ω—É—é: https://vk.com/griffindor_hogonline
                    –ü–∞—Ä–æ–ª—å: –ö–ê–ü–£–¢ –î–†–ê–ö–û–ù–ò–° (–ø–∞—Ä–æ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤—É –≥–æ—Å—Ç–∏–Ω–æ–π)
                    
                    –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–≤–µ—Ä—à–∏—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–∫—É–ø–∫–∏! –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏—è –±–∞–Ω–∫–∞ –ì—Ä–∏–Ω–≥–æ—Ç—Ç—Å https://vk.com/ho_bank
                    
                    –î–æ–±–∞–≤—å—Ç–µ –≤ –¥—Ä—É–∑—å—è —Å–≤–æ–µ–≥–æ –¥–µ–∫–∞–Ω–∞ ‚Äî https://vk.com/id865081770
                    
                    –ê —Ç–∞–∫–∂–µ —Å—Ç–∞—Ä–æ—Å—Ç—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞, –∏–º–µ–Ω–Ω–æ –∫ –Ω–µ–º—É(–Ω–µ–π) –º–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º ‚Äî
                    ${upa?.grif}
                    
                    –ü–æ–º–µ–Ω—è—Ç—å —Ñ–∞–∫—É–ª—å—Ç–µ—Ç –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞ 2 –∫—É—Ä—Å–µ –æ–±—É—á–µ–Ω–∏—è.`
                }
                await context.send(data_answer[answer8.payload.command])
            }
		}
        
    })
    hearManager.hear(/!–±–µ–∫–∞–ø/, async (context) => {
        if (context.senderId == 200840769)
        await context.sendDocuments({ value: `./prisma/dev.db`, filename: `dev.db` }, { message: 'üí° –û—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–∞ —Å–∞–π—Ç–µ: https://sqliteonline.com/' } );
        await vk.api.messages.send({
                peer_id: chat_id,
                random_id: 0,
                message: `‚Äº @id${context.senderId}(Admin) –¥–µ–ª–∞–µ—Ç –±–µ–∫–∞–ø –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö dev.db.`
        })
    })
    hearManager.hear(/!–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã/, async (context) => {
        const quest_control: Config | null = await prisma.config.findFirst({}) ? await prisma.config.findFirst({}) : await prisma.config.create({ data: { target1:`grif`, target2:`coga`, target3:`puff`, target4:`sliz` } })
        let answer_check = false
        let facult = ``
        await context.send(`–¢–µ–∫—É—â–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:\n1: ${quest_control?.target1}\n2: ${quest_control?.target2}\n3: ${quest_control?.target3}\n4: ${quest_control?.target4}`)
		while (answer_check == false) {
			const answer2 = await context.question(`üß∑ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–∞—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç:`,
				{
					keyboard: Keyboard.builder()
					.textButton({ label: '–ü—É—Ñ—Ñ–µ–Ω–¥—É–π', payload: { command: 'puff' }, color: 'secondary' })
					.textButton({ label: '–ì—Ä–∏—Ñ—Ñ–∏–Ω–¥–æ—Ä', payload: { command: 'grif' }, color: 'secondary' })
					.textButton({ label: '–ö–æ–≥—Ç–µ–≤—Ä–∞–Ω', payload: { command: 'coga' }, color: 'secondary' })
					.textButton({ label: '–°–ª–∏–∑–µ—Ä–∏–Ω', payload: { command: 'sliz' }, color: 'secondary' })
					.oneTime().inline(), answerTimeLimit
				}
			)
			if (answer2.isTimeout) { return await context.send('‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞ –æ—Ç–≤–µ—Ç 2-–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∏—Å—Ç–µ–∫–ª–æ!') }
			if (!answer2.payload) {
				context.send(`üí° –ñ–º–∏—Ç–µ —Ç–æ–ª—å–∫–æ –ø–æ –∫–Ω–æ–ø–∫–∞–º —Å –∏–∫–æ–Ω–∫–∞–º–∏!`)
			} else {
				facult += `${answer2.payload.command}`
				answer_check = true
			}
		}
        let answer_check2 = false
        let priority = ``
		while (answer_check2 == false) {
			const answer2 = await context.question(`üß∑ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É ${facult} –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç:`,
				{
					keyboard: Keyboard.builder()
					.textButton({ label: '1', payload: { command: `1` }, color: 'secondary' })
					.textButton({ label: '2', payload: { command: `2` }, color: 'secondary' })
					.textButton({ label: '3', payload: { command: `3` }, color: 'secondary' })
					.textButton({ label: '4', payload: { command: `4` }, color: 'secondary' })
					.oneTime().inline(), answerTimeLimit
				}
			)
			if (answer2.isTimeout) { return await context.send('‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞ –æ—Ç–≤–µ—Ç 2-–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∏—Å—Ç–µ–∫–ª–æ!') }
			if (!answer2.payload) {
				context.send(`üí° –ñ–º–∏—Ç–µ —Ç–æ–ª—å–∫–æ –ø–æ –∫–Ω–æ–ø–∫–∞–º —Å –∏–∫–æ–Ω–∫–∞–º–∏!`)
			} else {
				priority += `${answer2.payload.command}`
				answer_check2 = true
			}
		}
        let res = null
        //console.log(`${facult} ${priority}`)
        switch (priority) {
            case `1`:
                res = await prisma.config.update({ where: { id: quest_control?.id }, data: { target1: facult } })
                await context.send(`–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –ø–µ—Ä–≤—ã–º ${facult}`)
                await context.send(`–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:\n1: ${res?.target1}\n2: ${res?.target2}\n3: ${res?.target3}\n4: ${res?.target4}`)
                break;
            case `2`:
                res = await prisma.config.update({ where: { id: quest_control?.id }, data: { target2: facult } })
                await context.send(`–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –≤—Ç–æ—Ä—ã–º ${facult}`)
                await context.send(`–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:\n1: ${res?.target1}\n2: ${res?.target2}\n3: ${res?.target3}\n4: ${res?.target4}`)
                break;
            case `3`:
                res = await prisma.config.update({ where: { id: quest_control?.id }, data: { target3: facult } })
                await context.send(`–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ —Ç—Ä–µ—Ç—å–∏–º ${facult}`)
                await context.send(`–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:\n1: ${res?.target1}\n2: ${res?.target2}\n3: ${res?.target3}\n4: ${res?.target4}`)
                break;
            case `4`:
                res = await prisma.config.update({ where: { id: quest_control?.id }, data: { target4: facult } })
                await context.send(`–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ —á–µ—Ç–≤–µ—Ä—Ç—ã–º ${facult}`)
                await context.send(`–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:\n1: ${res?.target1}\n2: ${res?.target2}\n3: ${res?.target3}\n4: ${res?.target4}`)
                break;
        }
        
    })
}
